###########
# BUILDER #
###########

# pull official base image
FROM python:3.8-slim as builder

# set work directory
WORKDIR /usr/src/openfacstrack

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
## install dependencies
COPY requirements.txt .
RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    libpcre3-dev \
    libpq-dev \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/openfacstrack/wheels -r requirements.txt \
    \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
    && rm -rf /var/lib/apt/lists/*

# install pandas dependencies
#RUN apk add build-base

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/openfacstrack/
RUN flake8 --ignore=E501,F401,W503 openfacstrack

# install dependencies

#RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/openfacstrack/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8-slim

# create the openfacstrack user
RUN useradd --user-group --system --create-home --no-log-init openfacstrack

# create the appropriate directories
ENV HOME=/home/openfacstrack
ENV APP_HOME=/home/openfacstrack/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
WORKDIR $APP_HOME

# install dependencies
#RUN apk update && apk add libpq libffi-dev gcc
COPY --from=builder /usr/src/openfacstrack/wheels /wheels
COPY --from=builder /usr/src/openfacstrack/requirements.txt .
RUN pip install --upgrade pip
RUN set -ex \
    && BUILD_DEPS=" \
    build-essential \
    libpcre3-dev \
    libpq-dev \
    " \
    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
    && pip install --no-cache /wheels/* \
    \
    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS

RUN apt-get install -y netcat libpq-dev

RUN rm -rf /var/lib/apt/lists/*

# copy entrypoint-prod.sh
COPY docker/entrypoint.prod.sh $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the openfacstrack user
RUN chown -R openfacstrack:openfacstrack $APP_HOME

# change to the openfacstrack user
USER openfacstrack

# run entrypoint.prod.sh
ENTRYPOINT ["/home/openfacstrack/web/entrypoint.prod.sh"]
